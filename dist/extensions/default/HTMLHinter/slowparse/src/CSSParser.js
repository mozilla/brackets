module.exports=function(){"use strict";var ParseError=require("./ParseError");var checkMixedContent=require("./checkMixedContent").mixedContent;function CSSParser(stream,domBuilder,warnings){this.stream=stream;this.domBuilder=domBuilder;this.warnings=warnings}CSSParser.prototype={cssProperties:["alignment-adjust","alignment-baseline","animation","animation-delay","animation-direction","animation-duration","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","appearance","azimuth","backface-visibility","background","background-attachment","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","baseline-shift","binding","bleed","bookmark-label","bookmark-level","bookmark-state","bookmark-target","border","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","clear","clip","color","color-profile","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","content","counter-increment","counter-reset","crop","cue","cue-after","cue-before","cursor","direction","display","dominant-baseline","drop-initial-after-adjust","drop-initial-after-align","drop-initial-before-adjust","drop-initial-before-align","drop-initial-size","drop-initial-value","elevation","empty-cells","filter","fit","fit-position","flex-align","flex-flow","flex-line-pack","flex-order","flex-pack","float","float-offset","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","grid-columns","grid-rows","hanging-punctuation","height","hyphenate-after","hyphenate-before","hyphenate-character","hyphenate-lines","hyphenate-resource","hyphens","icon","image-orientation","image-rendering","image-resolution","inline-box-align","left","letter-spacing","line-break","line-height","line-stacking","line-stacking-ruby","line-stacking-shift","line-stacking-strategy","list-style","list-style-image","list-style-position","list-style-type","margin","margin-bottom","margin-left","margin-right","margin-top","marker-offset","marks","marquee-direction","marquee-loop","marquee-play-count","marquee-speed","marquee-style","max-height","max-width","min-height","min-width","move-to","nav-down","nav-index","nav-left","nav-right","nav-up","opacity","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-style","overflow-wrap","overflow-x","overflow-y","padding","padding-bottom","padding-left","padding-right","padding-top","page","page-break-after","page-break-before","page-break-inside","page-policy","pause","pause-after","pause-before","perspective","perspective-origin","phonemes","pitch","pitch-range","play-during","pointer-events","position","presentation-level","punctuation-trim","quotes","rendering-intent","resize","rest","rest-after","rest-before","richness","right","rotation","rotation-point","ruby-align","ruby-overhang","ruby-position","ruby-span","src","size","speak","speak-header","speak-numeral","speak-punctuation","speech-rate","stress","string-set","tab-size","table-layout","target","target-name","target-new","target-position","text-align","text-align-last","text-decoration","text-decoration-color","text-decoration-line","text-decoration-skip","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-height","text-indent","text-justify","text-outline","text-shadow","text-space-collapse","text-transform","text-underline-position","text-wrap","top","transform","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-pitch-range","voice-rate","voice-stress","voice-volume","volume","white-space","widows","width","word-break","word-spacing","word-wrap","z-index","align-content","align-items","align-self","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","justify-content"],_knownCSSProperty:function(propertyName){propertyName=propertyName.replace(/^-.+?-/,"");return this.cssProperties.indexOf(propertyName)>-1},parse:function(){this.rules=[];this.comments=[];var sliceStart=this.stream.pos;this.stream.markTokenStartAfterSpace();this._parseBlockType();var sliceEnd=this.stream.pos;var cssBlock={value:this.stream.text.slice(sliceStart,sliceEnd),parseInfo:{start:sliceStart,end:sliceEnd,rules:this.rules,comments:this.comments}};this.rules=null;this.comments=null;return cssBlock},stripComments:function(term,startPos){var pos,last=term.length,commentStart,commentEnd,prev,next,stripped="";for(pos=0;pos<last;pos++){if(term[pos]==="/"&&pos<last-1&&term[pos+1]==="*"){commentStart=startPos+pos;pos+=3;while(pos<last-1&&term.substr(pos-1,2)!=="*/"){pos++}if(pos>=last-1&&term.substr(pos-1,2)!=="*/")throw new ParseError("UNTERMINATED_CSS_COMMENT",commentStart);commentEnd=startPos+pos+1;this.comments.push({start:commentStart,end:commentEnd})}else{stripped+=term[pos]}}return stripped.trim()},filterComments:function(token){var text=token.value,tsize=text.length,ntsize,stripped=this.stripComments(text,token.interval.start);text=text.replace(/^\s+/,"");text=text.replace(/^\/\*[\w\W]*?\*\/\s*/,"");ntsize=text.length;token.interval.start+=tsize-ntsize;tsize=ntsize;text=text.split("").reverse().join("");text=text.replace(/^\s+/,"");text=text.replace(/^\/\*[\w\W]*?\*\/\s*/,"");ntsize=text.length;token.interval.end-=tsize-ntsize;token.value=stripped},_parseBlockType:function(){if(this.currentRule){this.rules.push(this.currentRule);this.currentRule=null}this.stream.stripCommentBlock();if(this.stream.peek()==="@"){this.stream.eatCSSWhile(/[^\{]/);var token=this.stream.makeToken(),name=token.value.trim();if(name.match(/@(-[^-]+-)?keyframes/)){this.stream.next();this.nested=true;return this._parseSelector()}if(name.match(/@media\s*\([^{)]+\)/)){this.stream.next();this.nested=true;return this._parseSelector()}if(name==="@font-face"){this.stream.rewind(token.value.length);this.stream.markTokenStart();return this._parseSelector()}throw new ParseError("UNKOWN_CSS_KEYWORD",this,token.interval.start,token.interval.end,name)}this._parseSelector()},_parseSelector:function(){this.stream.eatCSSWhile(/[^\{;\}<]/);var token=this.stream.makeToken(),peek=this.stream.peek();if(peek==="}"){this.stream.next();return this._parseBlockType()}if(token===null){if(!this.stream.end()&&this.stream.peek()==="<"){if(this.stream.substream(2)!=="</"){throw new ParseError("HTML_CODE_IN_CSS_BLOCK",this,this.stream.pos-1,this.stream.pos)}return}throw new ParseError("MISSING_CSS_SELECTOR",this,this.stream.pos-1,this.stream.pos)}this.filterComments(token);var selector=token.value,selectorStart=token.interval.start,selectorEnd=token.interval.end;if(selector===""){this._parseBlockType();return}this.currentRule={selector:{value:selector,start:selectorStart,end:selectorEnd},declarations:{start:null,end:null,properties:[]}};if(this.stream.end()||peek==="<"){if(!this.nested){throw new ParseError("UNFINISHED_CSS_SELECTOR",this,selectorStart,selectorEnd,selector)}return}if(!this.stream.end()){var next=this.stream.next(),errorMsg="[_parseBlockType] Expected {, }, ; or :, instead found "+next;if(next==="{"){this.currentRule.declarations.start=this.stream.pos-1;this._parseDeclaration(selector,selectorStart)}else if(next===";"||next==="}"){throw new ParseError("MISSING_CSS_BLOCK_OPENER",this,selectorStart,selectorEnd,selector)}else{throw new ParseError("UNCAUGHT_CSS_PARSE_ERROR",this,token.interval.start,token.interval.end,errorMsg)}}else{throw new ParseError("MISSING_CSS_BLOCK_OPENER",this,selectorStart,selectorEnd,selector)}},_parseDeclaration:function(selector,selectorStart,value){this.stream.markTokenStartAfterSpace();var peek=this.stream.peek();if(peek==="}"){this.stream.next();this.currentRule.declarations.end=this.stream.pos;this.stream.markTokenStartAfterSpace();this._parseBlockType()}else if(value&&(this.stream.end()||peek==="<")){throw new ParseError("MISSING_CSS_BLOCK_CLOSER",this,selectorStart,selectorStart+value.length,value)}else{this._parseProperty(selector,selectorStart)}},_parseProperty:function(selector,selectorStart){this.stream.eatCSSWhile(/[^\{\}<;:]/);var token=this.stream.makeToken();if(token===null){throw new ParseError("MISSING_CSS_PROPERTY",this,selectorStart,selectorStart+selector.length,selector)}this.filterComments(token);var property=token.value,propertyStart=token.interval.start,propertyEnd=token.interval.end;if(property===""){this._parseDeclaration(selector,selectorStart);return}var next=this.stream.next(),errorMsg="[_parseProperty] Expected }, {, <, ; or :, instead found "+next;if(next==="{"){throw new ParseError("MISSING_CSS_BLOCK_CLOSER",this,selectorStart,propertyStart,selector)}if(this.stream.end()&&next!==":"||next==="<"||next==="}"){throw new ParseError("UNFINISHED_CSS_PROPERTY",this,propertyStart,propertyEnd,property)}this.currentProperty={name:{value:property,start:propertyStart,end:propertyEnd}};if(next===":"){if(!(property&&property.match(/^[a-z\-]+$/))||!this._knownCSSProperty(property)){throw new ParseError("INVALID_CSS_PROPERTY_NAME",this,propertyStart,propertyEnd,property)}this.stream.markTokenStartAfterSpace();this._parseValue(selector,selectorStart,property,propertyStart)}else if(next===";"){throw new ParseError("MISSING_CSS_VALUE",this,propertyStart,propertyEnd,property)}else{throw new ParseError("UNCAUGHT_CSS_PARSE_ERROR",this,token.interval.start,token.interval.end,errorMsg)}},_parseValue:function(selector,selectorStart,property,propertyStart){if(property==="content"){this.stream.findContentEnd()}else{this.stream.eatCSSWhile(/[^}<;]/)}var token=this.stream.makeToken();if(token===null){throw new ParseError("MISSING_CSS_VALUE",this,propertyStart,propertyStart+property.length,property)}var next=!this.stream.end()?this.stream.next():"end of stream",errorMsg="[_parseValue] Expected }, <, or ;, instead found "+next;this.filterComments(token);var value=token.value,valueStart=token.interval.start,valueEnd=token.interval.end;if(value===""){throw new ParseError("MISSING_CSS_VALUE",this,this.stream.pos-1,this.stream.pos)}this.currentProperty.value={value:value,start:valueStart,end:valueEnd};if(this.stream.end()&&next!==";"||next==="<"){throw new ParseError("UNFINISHED_CSS_VALUE",this,valueStart,valueEnd,value)}if(checkMixedContent&&value.match(/,?\s*url\(\s*['"]?http:\/\/.+\)/)){valueStart=valueStart+value.indexOf("url");this.warnings.push(new ParseError("CSS_MIXED_ACTIVECONTENT",this,property,propertyStart,value,valueStart,valueEnd))}if(next===";"){this._bindCurrentRule();this.stream.markTokenStartAfterSpace();this._parseDeclaration(selector,valueStart,value)}else if(next==="}"){this.currentRule.declarations.end=this.stream.pos;this._bindCurrentRule();this.stream.markTokenStartAfterSpace();this._parseBlockType()}else{throw new ParseError("UNCAUGHT_CSS_PARSE_ERROR",this,token.interval.start,token.interval.end,errorMsg)}},_bindCurrentRule:function(){this.currentRule.declarations.properties.push(this.currentProperty);this.currentProperty=null}};return CSSParser}();